<?xml version="1.0"?>

<f:view xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:p="http://primefaces.org/ui"
	xmlns:ui="http://java.sun.com/jsf/facelets">

	<h:head></h:head>

	<h:body>

		<h:form id="test">
			<p:commandLink
				action="/views/initialMenu.xhtml?javax.portlet.faces.PortletMode=view&amp;javax.portlet.faces.WindowState=normal">
				<h:graphicImage url="/Home.png" styleClass="basicImageStyle" />
			</p:commandLink>
			<br />
			<br />
			<p:panel>
				<f:facet name="header">
					<h:outputText
						value="Step 2: Add application general characteristics and EASTIN properties" />
					<h:graphicImage url="/info16.png" styleClass="basicImageStyle"
						title="Provide the relevant metadata of the tool (e.g. text description, functionalities, etc.)  which are
						used in the characterization of the registered solution. Complete all technical details based on
						EASTIN taxonomy (e.g. Operating system, language) or suggest new cluster/cluster items in case of taxonomy terms which have not been already been included in EASTIN taxonomy.
						 Once the user finishes with the description 
						procedure, he moves to the next step of the introduction of the specific settings by pressing the corresponding button." />
				</f:facet>

				<p:panel header="Insert application general characteristics"
					id="mainPanel">
					<p:messages id="messages" autoUpdate="true" closable="true" />
					<h:panelGrid columns="2" columnClasses="label,value"
						styleClass="grid">
						<p:column headerText="Appname" width="100" styleClass="wrap">
							<h:outputText value="Application Name: *" id="Appname"
								required="true"
								title="The name of the application/solution in a human readable format" />
						</p:column>

						<p:inputText label="Application Name" required="true"
							style="width: 300px;" id="ApplicationName" autocomplete="off"
							value="#{step2Bean.applicationName}"
							update=":#{p:component('relevantSols')}">
							<f:ajax event="mouseout" execute="ApplicationName"
								listener="#{step2Bean.nameListener}" />
						</p:inputText>

						<p:commandButton value="Load Eastin Properties" id="loadEastin"
							actionListener="#{step2Bean.loadEastinProperties}"
							oncomplete="eastinDialog.show()"
							update=":#{p:component('eastinDialog')}"
							title="Communication with external repositories like the EASTIN database
							 in order to provide more concrete information for the application" />
						<br />

						<p:column headerText="unifiedlistingid" width="100"
							styleClass="wrap">
							<h:outputText value="Unified Listing ID: *" id="UnLId"
								title="The id should be a unique ID for the application.
								 The general format used is eg. 'com.microsoft.win7.magnifier'" />
						</p:column>
						<p:inputText label="Unified Listing ID" required="true"
							id="UnifiedListingID" autocomplete="off" style="width: 300px;"
							value="#{step2Bean.id}">
						</p:inputText>

						<h:outputText value="Category:  "
							title="Selected or proposed main application category" />
						<h:panelGrid columns="3" columnClasses="label, value"
							styleClass="grid">
							<h:outputText value="#{step2Bean.selectedCategory}" />
							<h:outputText value=" (proposed) "
								rendered="#{step2Bean.categoryProposed}" />
							<p:commandButton value="Change category" id="changeCategoryBut"
								actionListener="#{step2Bean.calculateCategoriesTree}"
								oncomplete="changeCategoryDialog.show()"
								update=":#{p:component('changeCategoryDialog')}"
								title="Change the category of the application" />
						</h:panelGrid>

						<p:column headerText="otherCategories" width="100"
							styleClass="wrap">
							<h:outputText value="Other categories:  "
								title="Other application cateogies" />
						</p:column>

						<p:selectCheckboxMenu value="#{step2Bean.categoriesList}"
							label="Select categories" filter="true" filterText="Filter"
							filterMatchMode="startsWith" panelStyle="width:220px">
							<f:selectItems value="#{ontologyInstance.categoriesNames}" />
						</p:selectCheckboxMenu>

						<p:column headerText="applicationdescription" width="100"
							styleClass="wrap">
							<h:outputText value="Application description: "
								id="Appdescription" title="Brief description of the application" />
						</p:column>

						<h:inputTextarea label="ApplicationDescription" required="false"
							id="ApplicationDescription" style="width: 300px;"
							autocomplete="off" value="#{step2Bean.applicationDescription}">
						</h:inputTextarea>

						<p:column headerText="constraintslimitations" width="100"
							styleClass="wrap">
							<h:outputText value="Constraints/limitations: "
								id="constraintslimit" title="Any constraints of the application" />
						</p:column>

						<p:inputText label="constraints" required="false" id="constraints"
							autocomplete="off" style="width: 300px;"
							value="#{step2Bean.constraints}">
						</p:inputText>

						<p:column headerText="insertdate" width="100" styleClass="wrap">
							<h:outputText value="Insert date: " id="Indate"
								title="The insert date of the application" />
						</p:column>

						<p:calendar value="#{step2Bean.date}" id="date" />

						<p:column headerText="latestUpdatedate" width="100"
							styleClass="wrap">
							<h:outputText value="Latest update date: " id="latestUpdate"
								title="The last update date of the application" />
						</p:column>

						<p:calendar value="#{step2Bean.updateDate}" id="updateDate" />
						<p:column headerText="manufacturer" width="100" styleClass="wrap">
							<h:outputText value="Manufacturer Name: " id="manuName"
								title="The name of the application’s manufacturer" />
						</p:column>

						<p:inputText label="manufacturerName" required="false"
							id="manufacturerName" style="width: 300px;" autocomplete="off"
							value="#{step2Bean.manufacturerName}">
						</p:inputText>

						<p:column headerText="manuCountry" width="100" styleClass="wrap">
							<h:outputText value="Manufacturer Country: " id="manuCountry"
								title="The country of the application’s manufacturer" />
						</p:column>

						<p:selectOneMenu value="#{step2Bean.manufacturerCountry}"
							autocomplete="off" style="width: 300px;">
							<f:selectItems value="#{ontologyInstance.countriesList}" />
						</p:selectOneMenu>

						<p:column headerText="manufacturerweb" width="100"
							styleClass="wrap">
							<h:outputText value="Manufacturer Website: " id="manuWebsite"
								title="The Website URL of the application’s manufacturer" />
						</p:column>

						<p:inputText label="manufacturerWebsite" required="false"
							id="manufacturerWebsite" style="width: 300px;" autocomplete="off"
							value="#{step2Bean.manufacturerWebsite}">
						</p:inputText>
						<p:column headerText="thumb" width="100" styleClass="wrap">
							<h:outputText value="Thumbnail: " id="thumbnail"
								title="URL of the small format picture of the application" />
						</p:column>



						<p:inputText label="imageUrl" required="false" id="imageUrl"
							style="width: 300px;" value="#{step2Bean.imageUrl}">
						</p:inputText>
						<!--   <img src="#{step2Bean.imageUrl}" class="thumbnail"/> -->
						<!--  -->
						<!--  -->
						<p:watermark for="constraints"
							value="e.g. needs JRE 1.6.2 or later" />
						<p:column headerText="SourceInformation" width="100"
							styleClass="wrap">
							<h:outputText value="Original source of information: "
								id="Source" title="Fill in the Original source of information" />
						</p:column>

						<p:inputText label="downloadPage" required="false"
							id="downloadPage" style="width: 300px;" autocomplete="off"
							value="#{step2Bean.downloadPage}">
						</p:inputText>

						<p:column headerText="startCommand" width="100" styleClass="wrap">
							<h:outputText value="Start command: " id="startCommand"
								title="Command that System Exec lifecycle handler executes in order to start user session" />
						</p:column>
						<p:inputText label="commandForStart" required="false"
							id="commandForStart" style="width: 300px;" autocomplete="off"
							value="#{step2Bean.commandForStart}">
						</p:inputText>
						<p:column headerText="stopCommand" width="100" styleClass="wrap">
							<h:outputText value="Stop command: " id="stopCommand"
								title="Command that System Exec lifecycle handler executes on log out" />
						</p:column>
						<p:inputText label="commandForStop" required="false"
							id="commandForStop" style="width: 300px;" autocomplete="off"
							value="#{step2Bean.commandForStop}">
						</p:inputText>
						<p:column headerText="capabilities" width="100" styleClass="wrap">
							<h:outputText value="Capabilities: " id="capabilities"
								title="Description of what needs and preferences the application can handle (in JSON format)" />
						</p:column>
						<h:inputTextarea label="capabilitiesArea" required="false"
							id="capabilitiesArea" style="width: 300px;" autocomplete="off"
							value="#{step2Bean.capabilities}">
						</h:inputTextarea>

						<p:column headerText="capabilitiesTransformations" width="100"
							styleClass="wrap">
							<h:outputText value="Capabilities Transformations: "
								id="capabilitiesTransformations"
								title="Description of how application settings are transformed into common terms and vice versa (in JSON format)" />
						</p:column>
						<h:inputTextarea label="capabilitiesTransArea" required="false"
							id="capabilitiesTransArea" style="width: 300px;"
							autocomplete="off"
							value="#{step2Bean.capabilitiesTransformations}">
						</h:inputTextarea>

						<p:column headerText="handlerType" width="100" styleClass="wrap">
							<h:outputText value="Settings Handler Type: " id="handlerTypeid"
								title="Settings Handlers are a type of Lifecycle Handler that
								 are responsible for configuring the settings of an application,
								  access feature, or assistive technology. They are often,
								   but not always, specific to a particular platform.
								    Platform-specific Settings Handlers typically
								     interface with the operating system's built
								      in APIs for storing settings (such as the Registry
								       on Windows and GSettings on Linux). Others are capable
								        of configuring standard formats such as XML and JSON files." />
						</p:column>

						<p:selectOneMenu value="#{step2Bean.handlerType}" id="handlerType"
							update=":#{p:component('MyaccordionPanel')}">

							<f:selectItems value="#{ontologyInstance.settingsHandlersNames}" />
							<p:ajax listener="#{step2Bean.localeChanged}" event="valueChange" />
						</p:selectOneMenu>


					</h:panelGrid>

					<p:panel id="options" style="margin-top:10px">

						<f:facet name="header">
							<h:outputText
								value="Specify options for the selected Settings handler type"
								id="options1"
								title="Describe information about how and where to locate the settings of handler,
								 by declaring a filename, a registry location, etc.Each Settings Handler requires certain
								  options to be set e.g. Option Name: Path, Option Value: Software\\Microsoft\\ScreenMagnifier.
								  Note that each option requires name and value to be valid." />
						</f:facet>

						<c:forEach items="#{step2Bean.options}" var="item"
							varStatus="status">

							<p:panelGrid style="width:100%;margin-bottom:5px">

								<p:row>
									<p:column style="font-weight: bold;">Option name
									<p:inputText value="#{item.optionName}" style="width: 300px;" />
									</p:column>
									<p:column style="font-weight: bold;">Option value
									<p:inputText value="#{item.optionValue}" style="width: 300px;" />
									</p:column>
									<p:column style="font-weight: bold;">
										<p:commandButton value="Remove option"
											rendered="#{step2Bean.options.size() > 1}"
											action="#{step2Bean.removeOptionFromList}" update="options"
											icon="ui-icon-close" title="Remove the option">
											<f:setPropertyActionListener value="#{item}"
												target="#{step2Bean.elementForRemove}" />
										</p:commandButton>
									</p:column>
								</p:row>

							</p:panelGrid>

						</c:forEach>

						<p:commandButton value="Add another option"
							actionListener="#{step2Bean.addOptionToList}" update="options"
							icon="ui-icon-plus"
							title="Add another option for the selected handler type" />
					</p:panel>

					<br />
				</p:panel>
				<p:blockUI block="test" trigger="loadEastin">  
				LOADING<br />
					<p:graphicImage value="/loading.gif" />
					<br />
					<p:commandButton value="Cancel loading" ajax="false"
						action="/views/step2View.xhtml?javax.portlet.faces.PortletMode=view&amp;javax.portlet.faces.WindowState=normal"
						oncomplete="eastinDialog.hide()" />
				</p:blockUI>

				<p:panel id="eastinPanel">
					<f:facet name="header">
						<a target="_blank"
							title="EASTIN taxonomy is based on a two level hierarchy made
						 up of Clusters and Features. Homogeneous Features are grouped together
						  in the same Cluster. For example the Features “Windows”,“Linux”, etc.,
						   are all grouped  in the Cluster “Operating System”
					. Features can be of two types: Measures, that can have a numeric value
					 or an interval specified (e.g. weight, length), and Attributes,
					  that do not have a specified value (i.e. are Boolean features).
					  User can select or complete values for existing attributes and measures and also
						 propose new cluster items and clusters."
							href="http://wiki.gpii.net/w/The_vocabulary_of_the_EASTIN_taxonomy">
							Complete Technical details (based on EASTIN Taxonomy)</a>
					</f:facet>

					<!-- <p:messages id="ItemProposalMessage" showDetail="true" autoUpdate="true" closable="true" /> -->
					<p:accordionPanel value="#{ontologyInstance.clustersToShowInView}"
						var="clus" id="accordionPanel" onTabShow="fixProposedItems()"
						onTabChange="fixProposedItems()"
						activeIndex="#{step2Bean.activeTabIndex}">

						<p:ajax event="tabChange" listener="#{step2Bean.onTabChange}" />
						<p:tab title="#{clus.name}" titletip="#{clus.description}">
							<p:selectManyButton value="#{clus.selectedProperties}"
								rendered="#{not clus.singleSelection}"
								styleClass="selectManyProperties">
								<f:selectItems value="#{clus.attributesToShowInView}"
									var="property" itemValue="#{property.name}"
									itemLabel="#{property.name}"
									itemDescription="#{property.proposedString}" />
							</p:selectManyButton>
							<h:dataTable var="divis" value="#{clus.measuresToShowInView}"
								rendered="#{not clus.singleSelection}"
								styleClass="proposedMeasures">
								<h:column>
									<h:outputText value="#{divis.name}: " title="#{divis.proposed}" />
								</h:column>
								<h:column>
									<p:inputText style="width: 300px;" value="#{divis.value}" />
								</h:column>
							</h:dataTable>
							<p:selectOneButton value="#{clus.selectedProperty}"
								rendered="#{clus.singleSelection}"
								styleClass="selectManyProperties">
								<f:selectItems value="#{clus.attributesToShowInView}"
									var="property" itemValue="#{property.name}"
									itemLabel="#{property.name}"
									itemDescription="#{property.proposedString}" />
							</p:selectOneButton>
							<h:dataTable var="divis" value="#{clus.measuresToShowInView}"
								rendered="#{clus.singleSelection}" styleClass="proposedMeasures">
								<h:column>
									<h:outputText value="#{divis.name}: " title="#{divis.proposed}" />
								</h:column>
								<h:column>
									<p:inputText style="width: 300px;" value="#{divis.value}" />
								</h:column>
							</h:dataTable>
							<br />
							<p:commandButton value="Show all" id="showMoreItems"
								style="margin:0" oncomplete="fixProposedItems()"
								update=":#{p:component('accordionPanel')}"
								actionListener="#{step2Bean.showMoreClusterItems}"
								title="Show more cluster items"
								disabled="#{!clus.showItems or !clus.hasToHideItems}"
								rendered="#{clus.hasToHideItems}" />
							<p:commandButton value="Show less" id="hideItems"
								style="margin:0" update=":#{p:component('accordionPanel')}"
								actionListener="#{step2Bean.hideClusterItems}"
								oncomplete="fixProposedItems()" title="Hide cluster items"
								disabled="#{clus.showItems or !clus.hasToHideItems}"
								rendered="#{clus.hasToHideItems}" />

							<p:panelGrid style="margin-top:20px;width:100%"
								id="proposalPanel">

								<f:facet name="header">
									<p:row>
										<p:column colspan="4">Propose a new item for this group:</p:column>
									</p:row>
								</f:facet>

								<p:row>
									<p:column style="font-weight: bold;">Name*</p:column>
									<p:column style="font-weight: bold;">Short description*</p:column>
									<p:column style="font-weight: bold;">Item type</p:column>
									<p:column style="font-weight: bold;">Select an existing proposal</p:column>
								</p:row>

								<p:row>

									<p:column>
										<p:inputText value="#{clus.itemProposalName}"
											disabled="#{clus.flag}" />
									</p:column>
									<p:column>
										<p:inputText value="#{clus.itemProposalDescription}"
											disabled="#{clus.flag}" />

									</p:column>
									<p:column>
										<p:selectOneMenu value="#{clus.itemProposalType}"
											disabled="#{clus.flag}">

											<p:selectOneMenu value="#{clus.itemProposalType}" />
											<f:selectItem itemLabel="Attribute" itemValue="Attribute" />
											<f:selectItem itemLabel="Measure" itemValue="Measure" />
										</p:selectOneMenu>
									</p:column>
									<p:column>
										<p:selectOneMenu value="#{clus.selectedProposedItem}">
											<f:selectItems value="#{ontologyInstance.allProposedItems}" />
											<f:converter converterId="eastinPropertyConverter" />
											<p:ajax event="change"
												update=":#{p:component('accordionPanel')}"
												listener="#{step2Bean.proposedItemChangedListener}"
												oncomplete="fixProposedItems()" />
										</p:selectOneMenu>
									</p:column>

								</p:row>

								<f:facet name="footer">

									<p:row>
										<p:column colspan="4">
											<p:commandButton value="Submit proposal" icon="ui-icon-check"
												id="searchRelevantClusterItems" style="margin:0"
												update=":#{p:component('relatedItemsDialog')}"
												actionListener="#{step2Bean.searchRelevantETNAItems}"
												title="Submit proposed item" />

											<p:blockUI block=":test" trigger="searchRelevantClusterItems">  
												SEARCHING RELEVANT ITEMS
												<br />
												<p:graphicImage value="/loading.gif" />
											</p:blockUI>
										</p:column>
									</p:row>
								</f:facet>
							</p:panelGrid>

						</p:tab>

					</p:accordionPanel>

					<p:commandButton value="Show all" id="showAllButton"
						actionListener="#{step2Bean.showMoreClusters}"
						update=":#{p:component('accordionPanel')},:#{p:component('eastinPanel')}"
						title="Show all EASTIN clusters"
						disabled="#{!step2Bean.clustersShowFlag}" />
					<p:commandButton value="Show less" id="showLessButton"
						actionListener="#{step2Bean.hideClusters}"
						update=":#{p:component('accordionPanel')},:#{p:component('eastinPanel')}"
						title="Hide unused EASTIN clusters"
						disabled="#{step2Bean.clustersShowFlag}" />
					<br />
					<p:commandButton value="Propose a new group of items"
						actionListener="#{step2Bean.showNewClusterDialog}"
						update=":#{p:component('newClusterDialog')}"
						title="Propose a new cluster with cluster items" />

					<div align="right">
						<h:outputText value="Fields marked with a star (*) are required" />
					</div>
				</p:panel>

				<p:commandButton value="Set application access information"
					actionListener="#{step2Bean.test3}"
					title="Set access information for the application" />

				<br />

				<div align="right">
					<p:commandLink actionListener="#{step2Bean.test}" id="prevBut"
						action="/views/addNewApplication.xhtml?javax.portlet.faces.PortletMode=view&amp;javax.portlet.faces.WindowState=normal">
						<h:graphicImage url="/previous.png"
							styleClass="basicImageStyle valign-middle"
							title="Go back to the previous page" />
						<span style="margin-right: 20px"> Go to previous step </span>
					</p:commandLink>

					<p:commandLink id="nextButNew" actionListener="#{step2Bean.test2}"
						action="/views/step3View.xhtml?javax.portlet.faces.PortletMode=view&amp;javax.portlet.faces.WindowState=normal">
						<span> Go to next step </span>
						<h:graphicImage url="/next.png"
							styleClass="basicImageStyle valign-middle"
							title="Go forward to the next page" />
					</p:commandLink>
				</div>
				<p:dialog widgetVar="eastinDialog" id="eastinDialog" modal="true"
					header="Eastin relevant applications" showEffect="clip"
					hideEffect="fold" position="center,center" resizable="false"
					dynamic="true" styleClass="eastinDialog">

					<p:dataTable id="eastinApplications" var="app"
						value="#{step2Bean.eastinApplications}"
						rowKey="#{app.productCode}"
						emptyMessage="#{step2Bean.dialogEmptyMessage}">

						<p:column headerText="Commercial name">
							<h:outputText value="#{app.commercialName}" />
						</p:column>
						<p:column headerText="Database">
							<h:outputText value="#{app.database}" />
						</p:column>
						<p:column headerText="Insert date">
							<h:outputText value="#{app.insertDate}" />
						</p:column>
						<p:column headerText="Iso code">
							<h:outputText value="#{app.isoCodePrimary.code}" />
						</p:column>
						<p:column headerText="Iso name">
							<h:outputText value="#{app.isoCodePrimary.name}" />
						</p:column>
						<p:column headerText="Last update date">
							<h:outputText value="#{app.lastUpdateDate}" />
						</p:column>
						<p:column headerText="Product code">
							<h:outputText value="#{app.productCode}" />
						</p:column>
						<p:column headerText="Thumbnail">
							<img src="#{app.thumbnailImageUrl}" class="thumbnail" />
						</p:column>
						<p:column headerText="Import to application">
							<p:commandLink oncomplete="eastinDialog.hide()"
								update=":#{p:component('test')}">
								<f:setPropertyActionListener value="#{app}"
									target="#{step2Bean.selectedEastinApplication}" />
								<h:graphicImage url="/fileimport.png"
									styleClass="basicImageStyle" />
							</p:commandLink>

						</p:column>

					</p:dataTable>
				</p:dialog>

				<p:dialog widgetVar="newClusterDialog" id="newClusterDialog"
					modal="true" header="Propose a new group of items"
					showEffect="clip" hideEffect="fold" position="center,center"
					resizable="false">

					<p:messages id="ProposalMessage" showDetail="true"
						autoUpdate="true" closable="true" />

					<p:panelGrid style="width:100%" id="grid">
						<p:row>
							<p:column style="font-weight: bold;">Name*</p:column>
							<p:column style="font-weight: bold;">Short description*</p:column>
							<p:column style="font-weight: bold;">Select an existing group</p:column>
						</p:row>

						<p:row>
							<p:column>
								<p:inputText value="#{step2Bean.proposedCluster.name}"
									disabled="#{step2Bean.proposedClusterFlag}" />
							</p:column>

							<p:column>
								<p:inputText value="#{step2Bean.proposedCluster.description}"
									disabled="#{step2Bean.proposedClusterFlag}" />
							</p:column>
							<p:column>
								<p:selectOneMenu value="#{step2Bean.selectedProposedCluster}">

									<f:selectItems
										value="#{ontologyInstance.proposedEASTINProperties}" />

									<p:ajax event="change"
										update=":#{p:component('grid')},:#{p:component('items')},:#{p:component('importProposal')}
										,:#{p:component('submitProposal')}"
										listener="#{step2Bean.selectedProposedClusterChangedListener}" />
									<f:converter converterId="etnaClusterConverter" />
								</p:selectOneMenu>
							</p:column>

						</p:row>
					</p:panelGrid>

					<p:panel header="Items in the group" id="items"
						style="margin-top:10px">

						<c:forEach items="#{step2Bean.proposedCluster.allproperties}"
							var="item" varStatus="status">

							<p:panelGrid style="width:100%;margin-bottom:5px">

								<f:facet name="header">
									<p:row>
										<p:column colspan="3">
											<h:outputText value="Item #{(status.index+1)}" />
										</p:column>
									</p:row>
								</f:facet>

								<p:row>
									<p:column style="font-weight: bold;">Name*</p:column>
									<p:column style="font-weight: bold;">Short description*</p:column>
									<p:column style="font-weight: bold;">Item type</p:column>
								</p:row>

								<p:row>
									<p:column>
										<p:inputText value="#{item.name}"
											disabled="#{step2Bean.proposedClusterFlag}" />
									</p:column>

									<p:column>
										<p:inputText value="#{item.definition}"
											disabled="#{step2Bean.proposedClusterFlag}" />
									</p:column>

									<p:column>
										<p:selectOneMenu value="#{item.type}"
											disabled="#{step2Bean.proposedClusterFlag}">
											<f:selectItem itemLabel="Attribute" itemValue="Attribute" />
											<f:selectItem itemLabel="Measure" itemValue="Measure" />
										</p:selectOneMenu>
									</p:column>

								</p:row>

								<f:facet name="footer">
									<p:row>
										<p:column colspan="3">
											<p:commandButton value="Remove item"
												title="Remove cluster item"
												rendered="#{step2Bean.proposedCluster.allproperties.size() > 1}"
												disabled="#{!step2Bean.disableImportButton or step2Bean.proposedClusterFlag}"
												action="#{step2Bean.removeItemFromCluster}" update="items"
												icon="ui-icon-close">
												<f:setPropertyActionListener value="#{item}"
													target="#{step2Bean.proposedItemToRemove}" />
											</p:commandButton>
										</p:column>
									</p:row>
								</f:facet>

							</p:panelGrid>

						</c:forEach>

						<hr />

						<p:commandButton value="Add another item"
							title="Add another cluster item"
							actionListener="#{step2Bean.addItemToCluster}" update="items"
							disabled="#{!step2Bean.disableImportButton or step2Bean.proposedClusterFlag}"
							icon="ui-icon-plus" />
					</p:panel>
					<p:commandButton value="Submit proposal" id="submitProposal"
						disabled="#{step2Bean.proposedClusterFlag}"
						actionListener="#{step2Bean.submitNewCluster}"
						update=":#{p:component('accordionPanel')}" icon="ui-icon-check"
						title="Submit proposed cluster" />
					<p:commandButton value="Import proposal"
						title="Import the selected proposed cluster"
						icon="ui-icon-circle-arrow-s"
						disabled="#{step2Bean.disableImportButton}" id="importProposal"
						style="margin:0" update=":#{p:component('test')}"
						actionListener="#{step2Bean.importProposal}" />
					<p:blockUI block="test" trigger="submitProposal">  
				LOADING<br />
						<p:graphicImage value="/loading.gif" />
					</p:blockUI>
				</p:dialog>

				<p:dialog widgetVar="clusterSubmittedDialog"
					id="clusterSubmittedDialog" modal="true" header="Success"
					resizable="false" showEffect="clip" hideEffect="fold"
					position="center,center">

					<h:outputText
						value="Thank you for your proposal. We will analyze it and provide a feedback as soon as possible. You can continue inserting data." />
					<br />
					<p:commandButton value="OK" id="okBut"
						update=":#{p:component('accordionPanel')}"
						oncomplete="clusterSubmittedDialog.hide(),newClusterDialog.hide()" />
				</p:dialog>

				<p:dialog widgetVar="accessInfoDialog" id="accessInfoDialog"
					modal="true" header="Application access info" showEffect="clip"
					hideEffect="fold" position="center,center" resizable="false">

					<br />

					<p:panel header="Application access information for Vendors">

						<h:panelGrid columns="2" columnClasses="label, value"
							styleClass="grid">
							<h:outputText value="Solution URL: " />
							<p:inputText style="width: 300px;" autocomplete="off"
								value="#{step2bBean.accessInfoForVendors.URLForAccess}" />
							<h:outputText value="Solution Access Description: " />
							<p:inputText style="width: 300px;" autocomplete="off"
								value="#{step2bBean.accessInfoForVendors.description}" />


						</h:panelGrid>
						<p:panel header="License">
							<h:panelGrid columns="2" columnClasses="label, value"
								styleClass="grid">
								<h:outputText value="Name: " />
								<p:inputText style="width: 300px;" autocomplete="off"
									value="#{step2bBean.accessInfoForVendors.license.licenseName}" />
								<h:outputText value="Description: " />
								<p:inputText style="width: 300px;" autocomplete="off"
									value="#{step2bBean.accessInfoForVendors.license.licenseDescription}" />

								<h:outputText value="Is proprietary: " />
								<p:selectBooleanCheckbox
									value="#{step2bBean.accessInfoForVendors.license.proprietary}" />
							</h:panelGrid>
						</p:panel>
						<p:panel header="Commercial Cost Schema">
							<h:panelGrid columns="2" columnClasses="label, value"
								styleClass="grid">
								<h:outputText value="Cost: " />
								<p:inputText style="width: 300px;" autocomplete="off"
									value="#{step2bBean.accessInfoForVendors.commercialCostSchema.commercialCost}">

								</p:inputText>
								<h:outputText value="Cost Currency: " />
								<p:selectOneMenu
									value="#{step2bBean.accessInfoForVendors.commercialCostSchema.commercialCostCurrency}">
									<f:selectItems
										value="#{ontologyInstance.commercialCostCurrency}" />

								</p:selectOneMenu>
								<h:outputText value="Cost Payment charge type: " />
								<p:selectOneMenu
									value="#{step2bBean.accessInfoForVendors.commercialCostSchema.costPaymentChargeType}">
									<f:selectItems
										value="#{ontologyInstance.costPaymentChargeType}" />
								</p:selectOneMenu>
							</h:panelGrid>
							<p:panel header="Trial Schema">
								<h:panelGrid columns="3" columnClasses="label, value"
									styleClass="grid">
									<h:panelGrid columns="2" columnClasses="label, value"
										styleClass="grid">
										<h:outputText value="Duration in days: " />
										<p:spinner style="width: 150px;"
											value="#{step2bBean.accessInfoForVendors.commercialCostSchema.trialSchema.durationInDays}" />
										<h:outputText value="Duration in usages: " />
										<p:spinner style="width: 150px;"
											value="#{step2bBean.accessInfoForVendors.commercialCostSchema.trialSchema.durationInUsages}" />
										<h:outputText value="Offers full functionality during trial: " />
										<p:selectBooleanCheckbox
											value="#{step2bBean.accessInfoForVendors.commercialCostSchema.trialSchema.offersFullFunctionalityDuringTrial}" />
									</h:panelGrid>
									<h:outputText
										value="&#160;&#160;&#160;&#160;&#160;&#160;&#160;" />
									<h:panelGrid columns="2" columnClasses="label, value"
										styleClass="grid">
										<h:outputText value="Limited Functionality Description: " />
										<p:inputTextarea rows="5" cols="30" maxlength="1000"
											autoResize="false"
											value="#{step2bBean.accessInfoForVendors.commercialCostSchema.trialSchema.limitedFunctionalityDescription}" />
									</h:panelGrid>
								</h:panelGrid>
							</p:panel>
							<p:panel header="Default Discount Schemas">
								<p:commandButton value="Add discount schema"
									actionListener="#{step2bBean.addDiscountSchema}"
									update=":#{p:component('discounts2')}" />
								<p:panel id="discounts2">
									<c:forEach
										items="#{step2bBean.accessInfoForVendors.commercialCostSchema.discountIfUsedWithOtherSolution}"
										var="item" varStatus="status">
										<p:panel header="Discount Schema  #{(status.index+1)}">
											<h:panelGrid columns="2" columnClasses="label, value"
												styleClass="grid">
												<h:outputText value="Paired solution: " />
												<p:selectOneMenu value="#{item.pairedSolution}">
													<f:selectItems value="#{item.selectItems}" />
													<f:converter converterId="solutionsConverter" />
												</p:selectOneMenu>
												<h:outputText value="Discount Reason: " />
												<p:inputText style="width: 300px;" autocomplete="off"
													value="#{item.discountReason}" />
												<h:outputText value="Discount (%): " />
												<h:panelGrid columns="3">
													<h:outputText id="output#{(status.index+1)}"
														value="#{item.discount}%" />
													<h:inputHidden id="txt#{(status.index+1)}"
														value="#{item.discount}" />
													<p:slider for="txt#{(status.index+1)}"
														display="output#{(status.index+1)}" style="width:150px"
														displayTemplate="{value}%">

													</p:slider>
												</h:panelGrid>
											</h:panelGrid>
										</p:panel>

									</c:forEach>
								</p:panel>

							</p:panel>
						</p:panel>
					</p:panel>

					<p:panel header="Application access information for users">

						<h:panelGrid columns="2" columnClasses="label, value"
							styleClass="grid">
							<h:outputText value="Solution URL: " />
							<p:inputText style="width: 300px;" autocomplete="off"
								value="#{step2bBean.accessInfoForUsers.URLForAccess}" />
							<h:outputText value="Solution Access Description: " />
							<p:inputText style="width: 300px;" autocomplete="off"
								value="#{step2bBean.accessInfoForUsers.description}" />

							<h:outputText value="Is accessible to countries: " />
							<p:selectManyMenu
								value="#{step2bBean.accessInfoForUsers.validForCountries}"
								id="countries" style="width:150px;height:100px">
								<f:selectItems value="#{ontologyInstance.countriesList}" />
							</p:selectManyMenu>
							<p:tooltip for="countries"
								value="For multiple selections press Ctrl button on your keyboard"
								showEffect="fade" hideEffect="fade" />
						</h:panelGrid>
						<p:panel header="License">
							<h:panelGrid columns="2" columnClasses="label, value"
								styleClass="grid">
								<h:outputText value="Name: " />
								<p:inputText style="width: 300px;" autocomplete="off"
									value="#{step2bBean.accessInfoForUsers.license.licenseName}" />
								<h:outputText value="Description: " />
								<p:inputText style="width: 300px;" autocomplete="off"
									value="#{step2bBean.accessInfoForUsers.license.licenseDescription}" />

								<h:outputText value="Is proprietary: " />
								<p:selectBooleanCheckbox
									value="#{step2bBean.accessInfoForUsers.license.proprietary}" />
							</h:panelGrid>
						</p:panel>
						<p:panel header="Commercial Cost Schema">
							<h:panelGrid columns="2" columnClasses="label, value"
								styleClass="grid">
								<h:outputText value="Cost: " />
								<p:inputText style="width: 300px;" autocomplete="off"
									value="#{step2bBean.accessInfoForUsers.commercialCostSchema.commercialCost}">

								</p:inputText>
								<h:outputText value="Cost Currency: " />
								<p:selectOneMenu
									value="#{step2bBean.accessInfoForUsers.commercialCostSchema.commercialCostCurrency}">
									<f:selectItems
										value="#{ontologyInstance.commercialCostCurrency}" />

								</p:selectOneMenu>
								<h:outputText value="Cost Payment charge type: " />
								<p:selectOneMenu
									value="#{step2bBean.accessInfoForUsers.commercialCostSchema.costPaymentChargeType}">
									<f:selectItems
										value="#{ontologyInstance.costPaymentChargeType}" />
								</p:selectOneMenu>
							</h:panelGrid>
							<p:panel header="Trial Schema">
								<h:panelGrid columns="3" columnClasses="label, value"
									styleClass="grid">
									<h:panelGrid columns="2" columnClasses="label, value"
										styleClass="grid">
										<h:outputText value="Duration in days: " />
										<p:spinner style="width: 150px;"
											value="#{step2bBean.accessInfoForUsers.commercialCostSchema.trialSchema.durationInDays}" />
										<h:outputText value="Duration in usages: " />
										<p:spinner style="width: 150px;"
											value="#{step2bBean.accessInfoForUsers.commercialCostSchema.trialSchema.durationInUsages}" />
										<h:outputText value="Offers full functionality during trial: " />
										<p:selectBooleanCheckbox
											value="#{step2bBean.accessInfoForUsers.commercialCostSchema.trialSchema.offersFullFunctionalityDuringTrial}" />
									</h:panelGrid>
									<h:outputText
										value="&#160;&#160;&#160;&#160;&#160;&#160;&#160;" />
									<h:panelGrid columns="2" columnClasses="label, value"
										styleClass="grid">
										<h:outputText value="Limited Functionality Description: " />
										<p:inputTextarea rows="5" cols="30" maxlength="1000"
											autoResize="false"
											value="#{step2bBean.accessInfoForUsers.commercialCostSchema.trialSchema.limitedFunctionalityDescription}" />
									</h:panelGrid>
								</h:panelGrid>
							</p:panel>
							<p:panel header="Default Discount Schemas">
								<p:commandButton value="Add discount schema"
									actionListener="#{step2bBean.addDiscountSchemaForUsers}"
									update=":#{p:component('discounts3')}" />
								<p:panel id="discounts3">
									<c:forEach
										items="#{step2bBean.accessInfoForUsers.commercialCostSchema.discountIfUsedWithOtherSolution}"
										var="item" varStatus="status">
										<p:panel header="Discount Schema  #{(status.index+1)}">
											<h:panelGrid columns="2" columnClasses="label, value"
												styleClass="grid">
												<h:outputText value="Paired solution: " />
												<p:selectOneMenu value="#{item.pairedSolution}">
													<f:selectItems value="#{item.solutionsListAsStrings}" />
													<f:converter converterId="solutionsConverter" />
												</p:selectOneMenu>
												<h:outputText value="Discount Reason: " />
												<p:inputText style="width: 300px;" autocomplete="off"
													value="#{item.discountReason}" />
												<h:outputText value="Discount (%): " />
												<h:panelGrid columns="3">
													<h:outputText id="outputb#{(status.index+1)}"
														value="#{item.discount}%" />
													<h:inputHidden id="txtb#{(status.index+1)}"
														value="#{item.discount}" />
													<p:slider for="txtb#{(status.index+1)}"
														display="outputb#{(status.index+1)}" style="width:150px"
														displayTemplate="{value}%">

													</p:slider>
												</h:panelGrid>
											</h:panelGrid>
										</p:panel>

									</c:forEach>
								</p:panel>

							</p:panel>
						</p:panel>
					</p:panel>
					<p:commandButton value="OK" id="OKAccessInfoBut" ajax="false"
						oncomplete="accessInfoDialog.hide()" />
				</p:dialog>

			</p:panel>
		</h:form>

		<h:form>
			<p:dialog widgetVar="relevantSolutionsDialog"
				id="relevantSolutionsDialog" modal="true"
				header="Existing entries with similar name/company name"
				resizable="false" showEffect="clip" hideEffect="fold" width="335"
				position="center,center" dynamic="true"
				styleClass="doPositionDialog" onShow="fixDialogPosition()">
				<h:outputText
					value="The following applications found to be relevant"
					rendered="#{step2Bean.solutionNameExists}" />
				<p:dataTable id="relevantSols" var="sol"
					value="#{step2Bean.relevantSolutions}" rowKey="#{sol.name}"
					selection="#{step2Bean.selectedRelevantSolution}"
					selectionMode="single"
					emptyMessage="No relevant applications found">
					<p:ajax event="rowSelect" listener="#{step2Bean.onRowSelect}"
						update=":#{p:component('edit5But')}" />

					<p:column headerText="Application name">
						<h:outputText value="#{sol.name}" />
					</p:column>
					<p:column headerText="Application category">
						<h:outputText value="#{sol.ontologyCategory}" />
					</p:column>

				</p:dataTable>
				<!-- 	<h:outputText value="The application name already exists"
					rendered="#{step2Bean.solutionNameExists}" />  -->
				<br />
				<p:blockUI block="relevantSolutionsDialog" trigger="edit5But">  
			LOADING<br />
					<p:graphicImage value="/loading.gif" />
				</p:blockUI>
				<p:commandButton value="Edit entry" id="edit5But" ajax="false"
					disabled="#{step2Bean.showEditInDialog}"
					actionListener="#{step2Bean.editSol}"
					action="/views/editSolutionView.xhtml?javax.portlet.faces.PortletMode=view&amp;javax.portlet.faces.WindowState=normal" />
				<p:commandButton value="Create a new entry" id="next5But"
					ajax="false" />
			</p:dialog>
		</h:form>
		<h:form>
			<p:dialog widgetVar="relatedItemsDialog" id="relatedItemsDialog"
				modal="true" header="Related items" resizable="false"
				showEffect="clip" hideEffect="fold" position="center,center"
				dynamic="true" styleClass="doPositionDialog"
				onShow="fixDialogPosition()">
				<h:outputText
					value='The following items where found in the "vocabulary" that might be related to your proposal' />
				<p:dataTable id="relevantItems" var="item"
					value="#{step2Bean.proposedClusterItemsMatches}" rowKey="ind"
					emptyMessage="No relevant items found">

					<p:column headerText="Cluster">
						<h:outputText value="#{item.belongsToCluster}" />
					</p:column>
					<p:column headerText="Item">
						<h:outputText value="#{item.name}" />
					</p:column>
					<p:column headerText=" ">
						<p:commandButton
							value="My proposal is a synonym (alias to this item)"
							action="#{step2Bean.selectProposedItem}"
							update=":#{p:component('test')},:#{p:component('relatedItemsDialog')}">
							<f:setPropertyActionListener value="#{item}"
								target="#{step2Bean.relevantItem}" />
						</p:commandButton>
					</p:column>

				</p:dataTable>

				<p:commandButton
					value="None of the above are relevant. Submit as a new proposal"
					actionListener="#{step2Bean.addClusterItemProposal}"
					oncomplete="relatedItemsDialog.hide();fixProposedItems()"
					update=":#{p:component('test')}" />
			</p:dialog>
		</h:form>

		<h:form>
			<p:dialog widgetVar="changeCategoryDialog" id="changeCategoryDialog"
				modal="true" header="Change category" resizable="true"
				showEffect="clip" hideEffect="fold" position="center,center"
				width="860" dynamic="true" styleClass="doPositionDialog"
				onShow="fixDialogPosition()">


				<p:scrollPanel>
					<h:outputText value="Select a category:" />

					<p:tree id="treeSingle222" value="#{step2Bean.root}" var="node"
						selectionMode="single" orientation="horizontal"
						selection="#{step2Bean.selectedNode}" style="width:775px;">
						<p:treeNode>
							<h:outputText value="#{node}" />
						</p:treeNode>
						<p:ajax event="select"
							update=":#{p:component('approveBut55')},:#{p:component('treeSingle222')}"
							listener="#{step2Bean.onNodeSelect}" />
					</p:tree>



					<p:commandButton value="Select" id="approveBut55"
						oncomplete="changeCategoryDialog.hide()"
						disabled="#{empty step2Bean.selectedCategory}"
						actionListener="#{step2Bean.changeCategory}"
						update=":#{p:component('test')}" />
					<!--  -->
					<p:commandButton value="Cancel" id="cancelChangesBut55"
						oncomplete="changeCategoryDialog.hide()"
						actionListener="#{step2Bean.cancelChangeCategory}"
						update=":#{p:component('test')}" />
					<br />
					<br />
				</p:scrollPanel>
			</p:dialog>
		</h:form>
	</h:body>
</f:view>